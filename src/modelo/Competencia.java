package modelo;

// Generated 15/12/2011 03:23:59 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Competencia generated by hbm2java
 */
@Entity
@Table(name = "competencia")
public class Competencia implements java.io.Serializable {

	private String codigoCompetencia;
	private DatoBasico datoBasicoByCodigoOrganizacion;
	private DatoBasico datoBasicoByCodigoTipo;
	private Temporada temporada;
	private DatoBasico datoBasicoByCodigoEstado;
	private TipoCompetencia tipoCompetencia;
	private String nombre;
	private Date fechaInicio;
	private Date fechaFin;
	private int cantidadEquipo;
	private int cantidadFase;
	private int cantidadJugador;
	private float montoInscripcion;
	private String condicionesGenerales;
	private String desempate;
	private String extrainning;
	private byte[] documento;
	private Set<FaseCompetencia> faseCompetencias = new HashSet<FaseCompetencia>(
			0);
	private Set<CategoriaCompetencia> categoriaCompetencias = new HashSet<CategoriaCompetencia>(
			0);
	private Set<EquipoCompetencia> equipoCompetencias = new HashSet<EquipoCompetencia>(
			0);
	private Set<RosterCompetencia> rosterCompetencias = new HashSet<RosterCompetencia>(
			0);
	private Set<IndicadorCompetencia> indicadorCompetencias = new HashSet<IndicadorCompetencia>(
			0);
	private Set<Juego> juegos = new HashSet<Juego>(0);

	public Competencia() {
	}

	public Competencia(String codigoCompetencia,
			DatoBasico datoBasicoByCodigoOrganizacion,
			DatoBasico datoBasicoByCodigoTipo, Temporada temporada,
			DatoBasico datoBasicoByCodigoEstado,
			TipoCompetencia tipoCompetencia, String nombre, Date fechaInicio,
			Date fechaFin, int cantidadEquipo, int cantidadFase,
			int cantidadJugador, float montoInscripcion,
			String condicionesGenerales, String desempate, String extrainning,
			byte[] documento) {
		this.codigoCompetencia = codigoCompetencia;
		this.datoBasicoByCodigoOrganizacion = datoBasicoByCodigoOrganizacion;
		this.datoBasicoByCodigoTipo = datoBasicoByCodigoTipo;
		this.temporada = temporada;
		this.datoBasicoByCodigoEstado = datoBasicoByCodigoEstado;
		this.tipoCompetencia = tipoCompetencia;
		this.nombre = nombre;
		this.fechaInicio = fechaInicio;
		this.fechaFin = fechaFin;
		this.cantidadEquipo = cantidadEquipo;
		this.cantidadFase = cantidadFase;
		this.cantidadJugador = cantidadJugador;
		this.montoInscripcion = montoInscripcion;
		this.condicionesGenerales = condicionesGenerales;
		this.desempate = desempate;
		this.extrainning = extrainning;
		this.documento = documento;
	}

	public Competencia(String codigoCompetencia,
			DatoBasico datoBasicoByCodigoOrganizacion,
			DatoBasico datoBasicoByCodigoTipo, Temporada temporada,
			DatoBasico datoBasicoByCodigoEstado,
			TipoCompetencia tipoCompetencia, String nombre, Date fechaInicio,
			Date fechaFin, int cantidadEquipo, int cantidadFase,
			int cantidadJugador, float montoInscripcion,
			String condicionesGenerales, String desempate, String extrainning,
			byte[] documento, Set<FaseCompetencia> faseCompetencias,
			Set<CategoriaCompetencia> categoriaCompetencias,
			Set<EquipoCompetencia> equipoCompetencias,
			Set<RosterCompetencia> rosterCompetencias,
			Set<IndicadorCompetencia> indicadorCompetencias, Set<Juego> juegos) {
		this.codigoCompetencia = codigoCompetencia;
		this.datoBasicoByCodigoOrganizacion = datoBasicoByCodigoOrganizacion;
		this.datoBasicoByCodigoTipo = datoBasicoByCodigoTipo;
		this.temporada = temporada;
		this.datoBasicoByCodigoEstado = datoBasicoByCodigoEstado;
		this.tipoCompetencia = tipoCompetencia;
		this.nombre = nombre;
		this.fechaInicio = fechaInicio;
		this.fechaFin = fechaFin;
		this.cantidadEquipo = cantidadEquipo;
		this.cantidadFase = cantidadFase;
		this.cantidadJugador = cantidadJugador;
		this.montoInscripcion = montoInscripcion;
		this.condicionesGenerales = condicionesGenerales;
		this.desempate = desempate;
		this.extrainning = extrainning;
		this.documento = documento;
		this.faseCompetencias = faseCompetencias;
		this.categoriaCompetencias = categoriaCompetencias;
		this.equipoCompetencias = equipoCompetencias;
		this.rosterCompetencias = rosterCompetencias;
		this.indicadorCompetencias = indicadorCompetencias;
		this.juegos = juegos;
	}

	@Id
	@Column(name = "codigo_competencia", unique = true, nullable = false)
	public String getCodigoCompetencia() {
		return this.codigoCompetencia;
	}

	public void setCodigoCompetencia(String codigoCompetencia) {
		this.codigoCompetencia = codigoCompetencia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_organizacion", nullable = false)
	public DatoBasico getDatoBasicoByCodigoOrganizacion() {
		return this.datoBasicoByCodigoOrganizacion;
	}

	public void setDatoBasicoByCodigoOrganizacion(
			DatoBasico datoBasicoByCodigoOrganizacion) {
		this.datoBasicoByCodigoOrganizacion = datoBasicoByCodigoOrganizacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_tipo", nullable = false)
	public DatoBasico getDatoBasicoByCodigoTipo() {
		return this.datoBasicoByCodigoTipo;
	}

	public void setDatoBasicoByCodigoTipo(DatoBasico datoBasicoByCodigoTipo) {
		this.datoBasicoByCodigoTipo = datoBasicoByCodigoTipo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_temporada", nullable = false)
	public Temporada getTemporada() {
		return this.temporada;
	}

	public void setTemporada(Temporada temporada) {
		this.temporada = temporada;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_estado", nullable = false)
	public DatoBasico getDatoBasicoByCodigoEstado() {
		return this.datoBasicoByCodigoEstado;
	}

	public void setDatoBasicoByCodigoEstado(DatoBasico datoBasicoByCodigoEstado) {
		this.datoBasicoByCodigoEstado = datoBasicoByCodigoEstado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_tipocompetencia", nullable = false)
	public TipoCompetencia getTipoCompetencia() {
		return this.tipoCompetencia;
	}

	public void setTipoCompetencia(TipoCompetencia tipoCompetencia) {
		this.tipoCompetencia = tipoCompetencia;
	}

	@Column(name = "nombre", nullable = false)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_inicio", nullable = false, length = 13)
	public Date getFechaInicio() {
		return this.fechaInicio;
	}

	public void setFechaInicio(Date fechaInicio) {
		this.fechaInicio = fechaInicio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_fin", nullable = false, length = 13)
	public Date getFechaFin() {
		return this.fechaFin;
	}

	public void setFechaFin(Date fechaFin) {
		this.fechaFin = fechaFin;
	}

	@Column(name = "cantidad_equipo", nullable = false)
	public int getCantidadEquipo() {
		return this.cantidadEquipo;
	}

	public void setCantidadEquipo(int cantidadEquipo) {
		this.cantidadEquipo = cantidadEquipo;
	}

	@Column(name = "cantidad_fase", nullable = false)
	public int getCantidadFase() {
		return this.cantidadFase;
	}

	public void setCantidadFase(int cantidadFase) {
		this.cantidadFase = cantidadFase;
	}

	@Column(name = "cantidad_jugador", nullable = false)
	public int getCantidadJugador() {
		return this.cantidadJugador;
	}

	public void setCantidadJugador(int cantidadJugador) {
		this.cantidadJugador = cantidadJugador;
	}

	@Column(name = "monto_inscripcion", nullable = false, precision = 8, scale = 8)
	public float getMontoInscripcion() {
		return this.montoInscripcion;
	}

	public void setMontoInscripcion(float montoInscripcion) {
		this.montoInscripcion = montoInscripcion;
	}

	@Column(name = "condiciones_generales", nullable = false)
	public String getCondicionesGenerales() {
		return this.condicionesGenerales;
	}

	public void setCondicionesGenerales(String condicionesGenerales) {
		this.condicionesGenerales = condicionesGenerales;
	}

	@Column(name = "desempate", nullable = false)
	public String getDesempate() {
		return this.desempate;
	}

	public void setDesempate(String desempate) {
		this.desempate = desempate;
	}

	@Column(name = "extrainning", nullable = false)
	public String getExtrainning() {
		return this.extrainning;
	}

	public void setExtrainning(String extrainning) {
		this.extrainning = extrainning;
	}

	@Column(name = "documento", nullable = false)
	public byte[] getDocumento() {
		return this.documento;
	}

	public void setDocumento(byte[] documento) {
		this.documento = documento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "competencia")
	public Set<FaseCompetencia> getFaseCompetencias() {
		return this.faseCompetencias;
	}

	public void setFaseCompetencias(Set<FaseCompetencia> faseCompetencias) {
		this.faseCompetencias = faseCompetencias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "competencia")
	public Set<CategoriaCompetencia> getCategoriaCompetencias() {
		return this.categoriaCompetencias;
	}

	public void setCategoriaCompetencias(
			Set<CategoriaCompetencia> categoriaCompetencias) {
		this.categoriaCompetencias = categoriaCompetencias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "competencia")
	public Set<EquipoCompetencia> getEquipoCompetencias() {
		return this.equipoCompetencias;
	}

	public void setEquipoCompetencias(Set<EquipoCompetencia> equipoCompetencias) {
		this.equipoCompetencias = equipoCompetencias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "competencia")
	public Set<RosterCompetencia> getRosterCompetencias() {
		return this.rosterCompetencias;
	}

	public void setRosterCompetencias(Set<RosterCompetencia> rosterCompetencias) {
		this.rosterCompetencias = rosterCompetencias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "competencia")
	public Set<IndicadorCompetencia> getIndicadorCompetencias() {
		return this.indicadorCompetencias;
	}

	public void setIndicadorCompetencias(
			Set<IndicadorCompetencia> indicadorCompetencias) {
		this.indicadorCompetencias = indicadorCompetencias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "competencia")
	public Set<Juego> getJuegos() {
		return this.juegos;
	}

	public void setJuegos(Set<Juego> juegos) {
		this.juegos = juegos;
	}

}
