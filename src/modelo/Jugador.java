package modelo;

// Generated 10/12/2011 11:05:49 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Jugador generated by hbm2java
 */
@Entity
@Table(name = "jugador")
public class Jugador implements java.io.Serializable {

	private String cedulaJugador;
	private Talla talla;
	private Pais pais;
	private Parroquia parroquia;
	private String brazoLanzar;
	private String direccion;
	private String email;
	private char estatus;
	private Date fechaIngreso;
	private Date fechaNacimiento;
	private byte[] foto;
	private char genero;
	private int numero;
	private String posicionBateo;
	private String primerApellido;
	private String primerNombre;
	private String segundoApellido;
	private String segundoNombre;
	private String telefonoCelular;
	private String telefonoHabitacion;
	private String twitter;
	private Set<DatoSocial> datoSocials = new HashSet<DatoSocial>(0);
	private Set<FamiliarJugador> familiarJugadors = new HashSet<FamiliarJugador>(
			0);
	private Set<DatoAcademico> datoAcademicos = new HashSet<DatoAcademico>(0);
	private Set<DatoDeportivo> datoDeportivos = new HashSet<DatoDeportivo>(0);
	private Set<Roster> rosters = new HashSet<Roster>(0);
	private Set<DatoMedico> datoMedicos = new HashSet<DatoMedico>(0);

	public Jugador() {
	}

	public Jugador(String cedulaJugador, Talla talla, Pais pais,
			Parroquia parroquia, String brazoLanzar, String direccion,
			char estatus, Date fechaIngreso, Date fechaNacimiento, byte[] foto,
			char genero, int numero, String posicionBateo,
			String primerApellido, String primerNombre) {
		this.cedulaJugador = cedulaJugador;
		this.talla = talla;
		this.pais = pais;
		this.parroquia = parroquia;
		this.brazoLanzar = brazoLanzar;
		this.direccion = direccion;
		this.estatus = estatus;
		this.fechaIngreso = fechaIngreso;
		this.fechaNacimiento = fechaNacimiento;
		this.foto = foto;
		this.genero = genero;
		this.numero = numero;
		this.posicionBateo = posicionBateo;
		this.primerApellido = primerApellido;
		this.primerNombre = primerNombre;
	}

	public Jugador(String cedulaJugador, Talla talla, Pais pais,
			Parroquia parroquia, String brazoLanzar, String direccion,
			String email, char estatus, Date fechaIngreso,
			Date fechaNacimiento, byte[] foto, char genero, int numero,
			String posicionBateo, String primerApellido, String primerNombre,
			String segundoApellido, String segundoNombre,
			String telefonoCelular, String telefonoHabitacion, String twitter,
			Set<DatoSocial> datoSocials, Set<FamiliarJugador> familiarJugadors,
			Set<DatoAcademico> datoAcademicos,
			Set<DatoDeportivo> datoDeportivos, Set<Roster> rosters,
			Set<DatoMedico> datoMedicos) {
		this.cedulaJugador = cedulaJugador;
		this.talla = talla;
		this.pais = pais;
		this.parroquia = parroquia;
		this.brazoLanzar = brazoLanzar;
		this.direccion = direccion;
		this.email = email;
		this.estatus = estatus;
		this.fechaIngreso = fechaIngreso;
		this.fechaNacimiento = fechaNacimiento;
		this.foto = foto;
		this.genero = genero;
		this.numero = numero;
		this.posicionBateo = posicionBateo;
		this.primerApellido = primerApellido;
		this.primerNombre = primerNombre;
		this.segundoApellido = segundoApellido;
		this.segundoNombre = segundoNombre;
		this.telefonoCelular = telefonoCelular;
		this.telefonoHabitacion = telefonoHabitacion;
		this.twitter = twitter;
		this.datoSocials = datoSocials;
		this.familiarJugadors = familiarJugadors;
		this.datoAcademicos = datoAcademicos;
		this.datoDeportivos = datoDeportivos;
		this.rosters = rosters;
		this.datoMedicos = datoMedicos;
	}

	@Id
	@Column(name = "cedula_jugador", unique = true, nullable = false)
	public String getCedulaJugador() {
		return this.cedulaJugador;
	}

	public void setCedulaJugador(String cedulaJugador) {
		this.cedulaJugador = cedulaJugador;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_talla", nullable = false)
	public Talla getTalla() {
		return this.talla;
	}

	public void setTalla(Talla talla) {
		this.talla = talla;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_pais", nullable = false)
	public Pais getPais() {
		return this.pais;
	}

	public void setPais(Pais pais) {
		this.pais = pais;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_parroquia", nullable = false)
	public Parroquia getParroquia() {
		return this.parroquia;
	}

	public void setParroquia(Parroquia parroquia) {
		this.parroquia = parroquia;
	}

	@Column(name = "brazo_lanzar", nullable = false)
	public String getBrazoLanzar() {
		return this.brazoLanzar;
	}

	public void setBrazoLanzar(String brazoLanzar) {
		this.brazoLanzar = brazoLanzar;
	}

	@Column(name = "direccion", nullable = false)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "estatus", nullable = false, length = 1)
	public char getEstatus() {
		return this.estatus;
	}

	public void setEstatus(char estatus) {
		this.estatus = estatus;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_ingreso", nullable = false, length = 13)
	public Date getFechaIngreso() {
		return this.fechaIngreso;
	}

	public void setFechaIngreso(Date fechaIngreso) {
		this.fechaIngreso = fechaIngreso;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_nacimiento", nullable = false, length = 13)
	public Date getFechaNacimiento() {
		return this.fechaNacimiento;
	}

	public void setFechaNacimiento(Date fechaNacimiento) {
		this.fechaNacimiento = fechaNacimiento;
	}

	@Column(name = "foto", nullable = false)
	public byte[] getFoto() {
		return this.foto;
	}

	public void setFoto(byte[] foto) {
		this.foto = foto;
	}

	@Column(name = "genero", nullable = false, length = 1)
	public char getGenero() {
		return this.genero;
	}

	public void setGenero(char genero) {
		this.genero = genero;
	}

	@Column(name = "numero", nullable = false)
	public int getNumero() {
		return this.numero;
	}

	public void setNumero(int numero) {
		this.numero = numero;
	}

	@Column(name = "posicion_bateo", nullable = false)
	public String getPosicionBateo() {
		return this.posicionBateo;
	}

	public void setPosicionBateo(String posicionBateo) {
		this.posicionBateo = posicionBateo;
	}

	@Column(name = "primer_apellido", nullable = false)
	public String getPrimerApellido() {
		return this.primerApellido;
	}

	public void setPrimerApellido(String primerApellido) {
		this.primerApellido = primerApellido;
	}

	@Column(name = "primer_nombre", nullable = false)
	public String getPrimerNombre() {
		return this.primerNombre;
	}

	public void setPrimerNombre(String primerNombre) {
		this.primerNombre = primerNombre;
	}

	@Column(name = "segundo_apellido")
	public String getSegundoApellido() {
		return this.segundoApellido;
	}

	public void setSegundoApellido(String segundoApellido) {
		this.segundoApellido = segundoApellido;
	}

	@Column(name = "segundo_nombre")
	public String getSegundoNombre() {
		return this.segundoNombre;
	}

	public void setSegundoNombre(String segundoNombre) {
		this.segundoNombre = segundoNombre;
	}

	@Column(name = "telefono_celular")
	public String getTelefonoCelular() {
		return this.telefonoCelular;
	}

	public void setTelefonoCelular(String telefonoCelular) {
		this.telefonoCelular = telefonoCelular;
	}

	@Column(name = "telefono_habitacion")
	public String getTelefonoHabitacion() {
		return this.telefonoHabitacion;
	}

	public void setTelefonoHabitacion(String telefonoHabitacion) {
		this.telefonoHabitacion = telefonoHabitacion;
	}

	@Column(name = "twitter")
	public String getTwitter() {
		return this.twitter;
	}

	public void setTwitter(String twitter) {
		this.twitter = twitter;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<DatoSocial> getDatoSocials() {
		return this.datoSocials;
	}

	public void setDatoSocials(Set<DatoSocial> datoSocials) {
		this.datoSocials = datoSocials;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<FamiliarJugador> getFamiliarJugadors() {
		return this.familiarJugadors;
	}

	public void setFamiliarJugadors(Set<FamiliarJugador> familiarJugadors) {
		this.familiarJugadors = familiarJugadors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<DatoAcademico> getDatoAcademicos() {
		return this.datoAcademicos;
	}

	public void setDatoAcademicos(Set<DatoAcademico> datoAcademicos) {
		this.datoAcademicos = datoAcademicos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<DatoDeportivo> getDatoDeportivos() {
		return this.datoDeportivos;
	}

	public void setDatoDeportivos(Set<DatoDeportivo> datoDeportivos) {
		this.datoDeportivos = datoDeportivos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<Roster> getRosters() {
		return this.rosters;
	}

	public void setRosters(Set<Roster> rosters) {
		this.rosters = rosters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jugador")
	public Set<DatoMedico> getDatoMedicos() {
		return this.datoMedicos;
	}

	public void setDatoMedicos(Set<DatoMedico> datoMedicos) {
		this.datoMedicos = datoMedicos;
	}

}
